---
sudo: required

env:
  - distribution: centos
    version: 7
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - distribution: ubuntu
    version: 14.04
    init: /sbin/init
    run_opts: ""
  - distribution: ubuntu
    version: 16.04
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"

services:
  - rabbitmq
  - docker

before_install:
  # Pull container
  - 'sudo docker pull ${distribution}:${version}'
  # Customize container
  - 'sudo docker build --rm=true --file=tests/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible tests'

install:
  # Install requirements
  - sudo apt-get update -qq
  - sudo apt-get install python-pip -y
  - sudo pip install ansible
  - sudo ansible-galaxy install -r tests/requirements.yml

before_script:
  - sudo rabbitmqctl add_user test testpw
  - sudo rabbitmqctl set_permissions test ".*" ".*" ".*"

  - container_id=$(mktemp)
  # Run container in detached state
  - >
    sudo docker run --add-host=dockerhost:`/sbin/ip addr show docker0 | awk '/inet / {print $2}' | cut -d '/' -f1` --detach
    --volume=/etc/ansible/roles:/etc/ansible/roles:rw ${run_opts}
    --volume="${PWD}":/etc/ansible/roles/openstack-neutron-compute:rw ${run_opts}
    ${distribution}-${version}:ansible "${init}" > "${container_id}"


script:
  # Ansible syntax check.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/openstack-neutron-compute/tests/test.yml --syntax-check'

  # Test role.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook -vvvv /etc/ansible/roles/openstack-neutron-compute/tests/test.yml'

  # Test role idempotence.
  - >
    sudo docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/openstack-neutron-compute/tests/test.yml
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

after_script:
  # Clean up
  - 'sudo docker stop "$(cat ${container_id})"'
